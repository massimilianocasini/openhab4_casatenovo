// Prodino
String  Prodino0_optoIn0 "Stato Antifurto [%s]" <alarm>         (gAlarmSystem, gMapDb)      ["Lock", "Status"]      {channel="mqtt:topic:mosquitto:prodino:optoIn0"}
String  Prodino0_optoIn1 "Allarme [%s]"         <alarm>         (gAlarmSystem)              ["Alarm"]               {channel="mqtt:topic:mosquitto:prodino:optoIn1"}
String  Prodino0_optoIn2 "Stato 220V [%s]" 	                    (gAlarmSystem)              ["Status"]              {channel="mqtt:topic:mosquitto:prodino:optoIn2"}
String  Prodino0_optoIn3 "Anomalia [%s]"  	                    (gAlarmSystem, gMapDb)      ["Status"]              {channel="mqtt:topic:mosquitto:prodino:optoIn3"}
//Number prodino0_out1 "Key gAntifurto"    <switch>  {mqtt=">[myUnsecureBroker:/KMP/ProDinoWiFi/Cmd:command:ON:rel-0-1], >[myUnsecureBroker:/KMP/ProDinoWiFi/Cmd:command:OFF:rel-0-0], <[myUnsecureBroker:/KMP/ProDinoWiFi/nInfo:state:MAP(prodino.map):optoIn-0.*]"}
Switch  Prodino0_ReleOut1  "Chiave"              <switch>       (gAlarmSystem, gMapDb) ["Switch", "Status"] {channel="mqtt:topic:mosquitto:prodino:ReleOut1", expire="1s,command=OFF"}
//Switch prodino0_out2 "Out 2"           (gAll, gAntifurto)      {mqtt=">[myUnsecureBroker:/KMP/ProDinoWiFi/Cmd:command:ON:rel-1-1], >[myUnsecureBroker:/KMP/ProDinoWiFi/Cmd:command:OFF:rel-1-0]"}
//Switch prodino0_out3 "Out 3"           (gAll, gAntifurto)     {mqtt=">[myUnsecureBroker:/KMP/ProDinoWiFi/Cmd:command:ON:rel-2-1], >[myUnsecureBroker:/KMP/ProDinoWiFi/Cmd:command:OFF:rel-2-0]"}
//Switch prodino0_out4 "Out 4"           (gAll, gAntifurto)     {mqtt=">[myUnsecureBroker:/KMP/ProDinoWiFi/Cmd:command:ON:rel-3-1], >[myUnsecureBroker:/KMP/ProDinoWiFi/Cmd:command:OFF:rel-3-0]"}
//Number Prodino_temp "Antifurto Temperatura [%.1f °C]"  <temperature> (gAll, gTemperatura, gAntifurto, gInfluxdb) {channel="mqtt:topic:myUnsecureBroker:prodino:temp_prodino"}
//Number Proxy_prodino_temp "Antifurto Temperatura [%.1f °C]"  <temperature> (gAll, gAntifurto, gInfluxdb) 
//Number Prodino_umid "Antifurto Umidità [%.1f %%]"     <humidity> (gAll, gAntifurto, gInfluxdb)  {channel="mqtt:topic:myUnsecureBroker:prodino:umid_prodino"}
//StudioLuce 
//Switch  StudioLuce  "Luce Studio"   <light> (gAll, gStudio) {ga="Light" [roomHint="Studio"]}

//Cm3Panel 
String  Cm3panel    "CM3Panel"  <settings>  {channel="mqtt:topic:mosquitto:cm3panel:system"}

// Tasmota Garage
Number ContatoreAcqua "Contatore acqua [%.0f]" (gGarageSensor, gInfluxdb) ["Measurement", "Water"] {channel="mqtt:topic:mosquitto:flussometro:flusso"}
Switch ResetContatoreAcqua "Reset contatore acqua []" (gGarageSensor) ["Switch", "Water"] {channel="mqtt:topic:mosquitto:flussometro:resetFlusso", expire="1s,command=OFF"}
Switch ElettrovalvolaAcqua "Elettrovalvola acqua []" (gValve) ["Switch", "Water"] {channel="mqtt:topic:mosquitto:flussometro:elettrovalvola", stateDescription="" [options="OFF=APERTA, ON=CHIUSA"]}

// Radar
Number:Temperature RadarTemp "Radar Temperatura [%.1f °C]" (gRadar) ["Measurement"] {channel="mqtt:topic:marconi:Radar:temp"}
Number RadarGas "Radar GAS [%.0f]" (gRadar) ["Measurement"] {channel="mqtt:topic:marconi:Radar:gas"}
Number:Pressure RadarPress "Radar Pressione [%.1f %%]" (gRadar) ["Measurement"] {channel="mqtt:topic:marconi:Radar:press", unit="hPa"}
Number RadarHum "Radar Umidità [%.0f %%]" (gRadar) ["Measurement"] {channel="mqtt:topic:marconi:Radar:hum"}